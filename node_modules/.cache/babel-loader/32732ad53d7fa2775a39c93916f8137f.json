{"ast":null,"code":"var _jsxFileName = \"/home/arpitha/Desktop/13jan/spreadsheet/src/App.js\";\nimport React from \"react\";\nimport TableCell from '@material-ui/core/TableCell';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Send from './send'; //  import { Data } from \"./data\";\n//  import * as XLSX from \"xlsx\";\n\nimport * as xlsx from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ExcelToJson extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.readUploadFile = e => {\n      e.preventDefault();\n\n      if (e.target.files) {\n        const reader = new FileReader();\n\n        reader.onload = e => {\n          const data = e.target.result;\n          const workbook = xlsx.read(data, {\n            type: \"array\"\n          });\n          const sheetName = workbook.SheetNames[0];\n          const worksheet = workbook.Sheets[sheetName];\n          const json = xlsx.utils.sheet_to_json(worksheet);\n          console.log(json);\n          this.setState({\n            dataInFile: json\n          });\n        };\n\n        reader.readAsArrayBuffer(e.target.files[0]);\n      }\n\n      const StyledTableCell = withStyles(theme => ({\n        head: {\n          backgroundColor: theme.palette.common.black,\n          color: theme.palette.common.white\n        },\n        body: {\n          fontSize: 14\n        }\n      }))(TableCell);\n    };\n\n    this.state = {\n      file: \"\",\n      dataInFile: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file\",\n        ref: \"fileUploader\",\n        onChange: this.readUploadFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        class: \"table table-striped\",\n        style: {\n          borderBlockStyle: \"solid\",\n          border: '1px solid black'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              border: '1px solid black'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid black',\n                backgroundColor: \"lightblue\"\n              },\n              children: \"id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid black',\n                backgroundColor: \"lightblue\"\n              },\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                border: '1px solid black',\n                backgroundColor: \"lightblue\"\n              },\n              children: \"age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [this.state.dataInFile.map(info => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              style: {\n                border: '1px solid blue'\n              },\n              children: [\" \", info.Id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid blue'\n              },\n              children: info.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                border: '1px solid blue'\n              },\n              children: info.age\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(Send, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ExcelToJson; // export default function App(){\n//   const[ExcelData,setExcelData]=useState('')\n//  function handleFile(e){\n//    let selectFile = ExcelData;\n//    if(selectFile){\n//      alert('selectFile.type')\n//     console.log(selectFile.type)\n//    }else{\n//      console.log('please select your file')\n//    }\n//    setExcelData(selectFile.type)\n//  } \n//   return(\n//     <>\n//     <h1>hiiii</h1>\n//     <div className=\"container\">\n//       <div className=\"form\">\n//         <form className=\"form-group\" autoComplete=\"off\">\n//           <label><h5>Upload file</h5></label>\n//           <br></br>\n//           <input type='file' className=\"form-control\" onChange={(e) => setExcelData(e.target.files[0])}  required></input>\n//           <button type=\"submit\" className=\"btn btn-success\"\n//           style={{marginTop:5+\"px\"}} onClick={(e) => handleFile(e)}>submit</button>\n//         </form>\n//       </div>\n//       <br></br>\n//       <hr></hr>\n//       <h5>view excel file</h5>\n//       <div className=\"viewer\">\n//         {ExcelData==null&&<>no file selected</>}\n//         {ExcelData==null&&(\n//           <div className=\"table-responsive\">\n//             <table className=\"table\">\n//             <thead>\n//               <tr>\n//                 <th scope=\"col\">Id</th>\n//                 <th scope=\"col\">name</th>\n//                 <th scope=\"col\">age</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               <Data ExelData={ExcelData}/>\n//             </tbody>\n//             </table>\n//             </div>\n//         )}\n//       </div>\n//     </div>\n//     </>\n//   )\n// }","map":{"version":3,"sources":["/home/arpitha/Desktop/13jan/spreadsheet/src/App.js"],"names":["React","TableCell","withStyles","makeStyles","Send","xlsx","ExcelToJson","Component","constructor","props","readUploadFile","e","preventDefault","target","files","reader","FileReader","onload","data","result","workbook","read","type","sheetName","SheetNames","worksheet","Sheets","json","utils","sheet_to_json","console","log","setState","dataInFile","readAsArrayBuffer","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","state","file","render","borderBlockStyle","border","map","info","Id","name","age"],"mappings":"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","sourcesContent":["import React  from \"react\";\nimport TableCell from '@material-ui/core/TableCell';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\n\n\nimport Send from './send'\n\n\n//  import { Data } from \"./data\";\n\n//  import * as XLSX from \"xlsx\";\n import * as xlsx from \"xlsx\";\n\nclass ExcelToJson extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: \"\",\n      dataInFile:[]\n    };\n  }\n  \n\n  \n\n \n\n\n   readUploadFile = (e) => {\n    e.preventDefault();\n    if (e.target.files) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const data = e.target.result;\n            const workbook = xlsx.read(data, { type: \"array\" });\n            const sheetName = workbook.SheetNames[0];\n            const worksheet = workbook.Sheets[sheetName];\n            const json = xlsx.utils.sheet_to_json(worksheet);\n            console.log(json);\n            this.setState({\n              dataInFile: json\n            })\n        };\n        reader.readAsArrayBuffer(e.target.files[0]);\n      \n    }\n\n    const StyledTableCell = withStyles((theme) => ({\n      head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n      },\n      body: {\n        fontSize: 14,\n      },\n    }))(TableCell);\n    \n  }\n\n\n\n  render() {\n    return (\n      <div>\n     \n\n        <input\n          type=\"file\"\n          id=\"file\"\n          ref=\"fileUploader\"\n          onChange={this.readUploadFile}\n          \n        />\n        {/* {JSON.stringify(this.state.dataInFile[0] )} */}\n\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <table class=\"table table-striped\" style={{borderBlockStyle:\"solid\",border: '1px solid black'}} >\n                <thead >\n                    <tr style={{border: '1px solid black'}}>\n                   \n                    <th  style={{border: '1px solid black',backgroundColor:\"lightblue\"}}>id</th>\n                    <th  style={{border: '1px solid black',backgroundColor:\"lightblue\"}}>Name</th>\n                    <th  style={{border: '1px solid black',backgroundColor:\"lightblue\"}}>age</th>\n                    {/* <th>  hyperlink</th> */}\n                    {/* https://api.whatsapp.coms/send?phone */}\n                    </tr>\n                </thead>\n                <tbody>\n                 \n        {/* {this.state.dataInFile[1]} */}\n                    \n                {this.state.dataInFile.map( info =>\n                 (\n                  <tr >\n                  <StyledTableCell style={{border: '1px solid blue'}}> {info.Id}</StyledTableCell>\n                  <td style={{border: '1px solid blue'}}>{info.name}</td>\n                  <td style={{border: '1px solid blue'}}>{info.age}</td>\n                  {/* <td><a href=\"https://wa.me/7019616404?text={info.age}\"/>{info.hyperlink}</td> */}\n                  </tr>\n                  \n                  \n                 )\n\n                 \n                )}   \n                    <Send/>          \n                </tbody>\n            </table>\n           \n      </div>\n    );\n  }\n}\n\nexport default ExcelToJson;\n\n// export default function App(){\n//   const[ExcelData,setExcelData]=useState('')\n\n//  function handleFile(e){\n\n//    let selectFile = ExcelData;\n//    if(selectFile){\n//      alert('selectFile.type')\n//     console.log(selectFile.type)\n//    }else{\n//      console.log('please select your file')\n     \n\n//    }\n//    setExcelData(selectFile.type)\n//  } \n \n\n//   return(\n//     <>\n//     <h1>hiiii</h1>\n//     <div className=\"container\">\n//       <div className=\"form\">\n//         <form className=\"form-group\" autoComplete=\"off\">\n//           <label><h5>Upload file</h5></label>\n//           <br></br>\n//           <input type='file' className=\"form-control\" onChange={(e) => setExcelData(e.target.files[0])}  required></input>\n\n//           <button type=\"submit\" className=\"btn btn-success\"\n//           style={{marginTop:5+\"px\"}} onClick={(e) => handleFile(e)}>submit</button>\n//         </form>\n//       </div>\n\n//       <br></br>\n//       <hr></hr>\n//       <h5>view excel file</h5>\n//       <div className=\"viewer\">\n//         {ExcelData==null&&<>no file selected</>}\n//         {ExcelData==null&&(\n//           <div className=\"table-responsive\">\n//             <table className=\"table\">\n//             <thead>\n//               <tr>\n//                 <th scope=\"col\">Id</th>\n//                 <th scope=\"col\">name</th>\n//                 <th scope=\"col\">age</th>\n                \n\n\n\n//               </tr>\n\n\n//             </thead>\n//             <tbody>\n//               <Data ExelData={ExcelData}/>\n\n//             </tbody>\n\n//             </table>\n//             </div>\n//         )}\n//       </div>\n//     </div>\n//     </>\n//   )\n// }\n "]},"metadata":{},"sourceType":"module"}